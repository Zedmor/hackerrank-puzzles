from collections import defaultdict
from math import sqrt, atan2, degrees

import numpy as np
from numpy.ma import arctan

lines = ['.#..#',
         '.....',
         '#####',
         '....#',
         '...##']

lines = ['......#.#.',
         '#..#.#....',
         '..#######.',
         '.#.#.###..',
         '.#..#.....',
         '..#....#.#',
         '#..#....#.',
         '.##.#..###',
         '##...#..#.',
         '.#....####'
         ]

lines = ['..............#.#...............#....#....',
          '#.##.......#....#.#..##........#...#......',
          '..#.....#....#..#.#....#.....#.#.##..#..#.',
          '...........##...#...##....#.#.#....#.##..#',
          '....##....#...........#..#....#......#.###',
          '.#...#......#.#.#.#...#....#.##.##......##',
          '#.##....#.....#.....#...####........###...',
          '.####....#.......#...##..#..#......#...#..',
          '...............#...........#..#.#.#.......',
          '........#.........##...#..........#..##...',
          '...#..................#....#....##..#.....',
          '.............#..#.#.........#........#.##.',
          '...#.#....................##..##..........',
          '.....#.#...##..............#...........#..',
          '......#..###.#........#.....#.##.#......#.',
          '#......#.#.....#...........##.#.....#..#.#',
          '.#.............#..#.....##.....###..#..#..',
          '.#...#.....#.....##.#......##....##....#..',
          '.........#.#..##............#..#...#......',
          '..#..##...#.#..#....#..#.#.......#.##.....',
          '#.......#.#....#.#..##.#...#.......#..###.',
          '.#..........#...##.#....#...#.#.........#.',
          '..#.#.......##..#.##..#.......#.###.......',
          '...#....###...#......#..#.....####........',
          '.............#.#..........#....#......#...',
          '#................#..................#.###.',
          '..###.........##...##..##.................',
          '.#.........#.#####..#...##....#...##......',
          '........#.#...#......#.................##.',
          '.##.....#..##.##.#....#....#......#.#....#',
          '.....#...........#.............#.....#....',
          '........#.##.#...#.###.###....#.#......#..',
          '..#...#.......###..#...#.##.....###.....#.',
          '....#.....#..#.....#...#......###...###...',
          '#..##.###...##.....#.....#....#...###..#..',
          '........######.#...............#...#.#...#',
          '...#.....####.##.....##...##..............',
          '###..#......#...............#......#...#..',
          '#..#...#.#........#.#.#...#..#....#.#.####',
          '#..#...#..........##.#.....##........#.#..',
          '........#....#..###..##....#.#.......##..#',
          '.................##............#.......#..']

lines9 = [
'.#..##.###...#######',
'##.############..##.',
'.#.######.########.#',
'.###.#######.####.#.',
'#####.##.#.##.###.##',
'..#####..#.#########',
'####################',
'#.####....###.#.#.##',
'##.#################',
'#####.##.###..####..',
'..######..##.#######',
'####.##.####...##..#',
'.#####..#.######.###',
'##...#.##########...',
'#.##########.#######',
'.####.#.###.###.#.##',
'....##.##.###..#####',
'.#.#.###########.###',
'#.#.#.#####.####.###',
'###.##.####.##.#..##']


# lines = [
# '.#....#####...#..',
# '##...##.#####..##',
# '##...#...#.#####.',
# '..#.....X...###..',
# '..#.#.....#....##']

ast_coords = []

for j in range(len(lines)):
    for i in range(len(lines[0])):
        if lines[i][j] == '#':
            ast_coords.append((i, j))

start_coords = (36, 26)

def rotate_cursor(start_coords):
    angles = defaultdict(list)
    for c in ast_coords:
        if c == start_coords:
            continue
        y, x = np.subtract(c, start_coords)
        angle = degrees(atan2(x, -y))
        if angle < 0:
            angle = 360 + angle
        angles[angle].append(c)
    while angles:
        for a in sorted(angles.keys()):
            nearest = min(angles[a], key=lambda coord: sqrt(
            (coord[0] - start_coords[0])**2 + (coord[1] - start_coords[1])**2))
            target = angles[a].pop(angles[a].index(nearest))
            yield target
            if not angles[a]:
                del angles[a]

targets = []

for coords in rotate_cursor(start_coords):
    targets.append(tuple(reversed(coords)))


print(targets[199])

